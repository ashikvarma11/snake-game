{"version":3,"sources":["constants.js","App.js","useInterval.js","index.js"],"names":["CANVAS_SIZE","SNAKE_START","APPLE_START","DIRECTIONS","38","40","37","39","HIT_OBJECT","POISON_START","BOOSTER_START","App","canvasRef","useRef","useState","snake","setSnake","apple","setApple","booster","setBooster","poison","setPoison","score","setScore","dir","setDir","speed","setSpeed","gameOver","setGameOver","callback","delay","savedCallback","useEffect","current","id","setInterval","clearInterval","useInterval","gameLoop","endGame","createApple","map","_a","i","Math","floor","random","checkCollision","piece","snk","segment","boostScore","prevScore","newBooster","atePoison","isBoosted","snakeCopy","JSON","parse","stringify","length","newSnakeHead","unshift","pop","newPoison","newSnake","newApple","checkAppleCollision","context","getContext","setTransform","clearRect","window","innerWidth","innerHeight","fillStyle","forEach","x","y","fillRect","role","tabIndex","onKeyDown","e","keyCode","moveSnake","className","onClick","style","border","ref","width","height","ReactDOM","render","document","getElementById"],"mappings":"+LAAA,IAAMA,EAAc,CAAC,IAAK,KACpBC,EAAc,CAClB,CAAC,EAAG,GACJ,CAAC,EAAG,IAEAC,EAAc,CAAC,EAAG,GAGlBC,EAAa,CACjBC,GAAI,CAAC,GAAI,GACTC,GAAI,CAAC,EAAG,GACRC,GAAI,EAAE,EAAG,GACTC,GAAI,CAAC,EAAG,IAGJC,EACE,EADFA,EAEC,EAFDA,EAGG,EAHHA,EAIG,EAJHA,EAKM,EALNA,EAMG,EANHA,EAOI,EAGJC,EAAe,CAAC,GAAG,GACnBC,EAAgB,CAAC,EAAE,IC2JVC,G,MArKH,WACV,IAAMC,EAAYC,mBADF,EAEUC,mBAASb,GAFnB,mBAETc,EAFS,KAEFC,EAFE,OAGUF,mBAASZ,GAHnB,mBAGTe,EAHS,KAGFC,EAHE,OAIcJ,mBAASJ,GAJvB,mBAITS,EAJS,KAIAC,EAJA,OAKYN,mBAASL,GALrB,mBAKTY,EALS,KAKDC,EALC,OAMUR,mBDKd,GCXI,mBAMTS,EANS,KAMFC,EANE,OAOMV,mBAAS,CAAC,GAAI,IAPpB,mBAOTW,EAPS,KAOJC,EAPI,OAQUZ,mBAAS,MARnB,mBAQTa,EARS,KAQFC,EARE,OASgBd,oBAAS,GATzB,mBASTe,EATS,KASCC,EATD,MCbX,SAAqBC,EAAUC,GACpC,IAAMC,EAAgBpB,mBAGtBqB,qBAAU,WACRD,EAAcE,QAAUJ,IACvB,CAACA,IAGJG,qBAAU,WAIR,GAAc,OAAVF,EAAgB,CAClB,IAAII,EAAKC,aAJX,WACEJ,EAAcE,YAGaH,GAC3B,OAAO,kBAAMM,cAAcF,OAE5B,CAACJ,IDYJO,EAAY,kBAAMC,OAAYb,GAE9B,IAAMc,EAAU,WACdb,EAAS,MACTE,GAAY,IAMRY,EAAc,kBAClBzB,EAAM0B,KAAI,SAACC,EAAIC,GAAL,OAAWC,KAAKC,MAAMD,KAAKE,UAAYhD,EAAY6C,GDrCnD,SC6CNI,EAAiB,SAACC,GAAwB,IAAjBC,EAAgB,uDAAVpC,EAGnC,GDhDU,GCgDNmC,EAAM,IAAclD,EAAY,GAAI,OAAOQ,EAC1C,GAAI0C,EAAM,GAAK,EAAG,OAAO1C,EACzB,GDlDK,GCkDD0C,EAAM,IAAclD,EAAY,GAAI,OAAOQ,EAC/C,GAAI0C,EAAM,GAAK,EAAG,OAAO1C,EACzB,GAAI0C,EAAM,KAAO7B,EAAO,IAAM6B,EAAM,KAAO7B,EAAO,GAAI,OAAOb,EAC7D,GAAI0C,EAAM,KAAO/B,EAAQ,IAAM+B,EAAM,KAAO/B,EAAQ,GAAI,OAAOX,EARvB,oBAWvB2C,GAXuB,IAW7C,2BAA2B,CAAC,IAAjBC,EAAgB,QACzB,GAAIF,EAAM,KAAOE,EAAQ,IAAMF,EAAM,KAAOE,EAAQ,GAAI,OAAO5C,GAZpB,8BAc7C,OAAO,GAkBH6C,EAAa,WACjB7B,GAAS,SAAA8B,GAAS,OAAEA,EAAU,KAC9B,IAAIC,EAvCJpC,EAAQwB,KAAI,SAACC,EAAIC,GAAL,OAAWC,KAAKC,MAAMD,KAAKE,UAAYhD,EAAY6C,GDxCrD,QCgFVzB,EAAWmC,IAMPf,GAAW,WAEf,IAAIgB,GAAY,EACZC,GAAY,EACVC,EAAYC,KAAKC,MAAMD,KAAKE,UAAU9C,IAEnB,IAArB2C,EAAUI,QAAcrB,IAC5B,IAAMsB,EAAe,CAACL,EAAU,GAAG,GAAKjC,EAAI,GAAIiC,EAAU,GAAG,GAAKjC,EAAI,IAEtE,OADAiC,EAAUM,QAAQD,GACVd,EAAec,IACrB,KAAKvD,EAAkBkD,EAAU,GAAG,GAAK,EAAG,MAC5C,KAAKlD,EAAiBkD,EAAU,GAAG,GAAK1D,EAAY,GDjG5C,GCiGwD,MAChE,KAAKQ,EAAgBkD,EAAU,GAAG,GAAK1D,EAAY,GDlG3C,GCkGuD,MAC/D,KAAKQ,EAAmBkD,EAAU,GAAG,GAAK,EAAG,MAC7C,KAAKlD,EAAqBiC,IAAU,MACpC,KAAKjC,EAAmBgD,GAAU,EAAK,MACvC,KAAKhD,EAAoB6C,IAAaI,GAAY,EAIpD,GAAID,EAAW,CACbE,EAAUO,MACV,IAAIC,EAjEN7C,EAAOsB,KAAI,SAACC,EAAIC,GAAL,OAAWC,KAAKC,MAAMD,KAAKE,UAAYhD,EAAY6C,GD3CpD,QC6GRvB,EAAU4C,GAGRT,GACFC,EAAUM,QAAQD,GAnDM,SAAAI,GAC1B,GAAIA,EAAS,GAAG,KAAOlD,EAAM,IAAMkD,EAAS,GAAG,KAAOlD,EAAM,GAAI,CAC9D,IAAImD,EAAW1B,IAGf,IADAlB,GAAS,SAAA8B,GAAS,OAAEA,EAAU,KACvBL,EAAemB,EAAUD,IAE9BC,EAAW1B,IAGb,OADAxB,EAASkD,IACF,EAET,OAAO,EA0CFC,CAAoBX,IAAYA,EAAUO,MAC/CjD,EAAS0C,IAyBX,OAdAxB,qBAAU,WACR,IAAMoC,EAAU1D,EAAUuB,QAAQoC,WAAW,MAC7CD,EAAQE,aDlIE,GCkIkB,EAAG,EDlIrB,GCkI+B,EAAG,GAC5CF,EAAQG,UAAU,EAAG,EAAGC,OAAOC,WAAYD,OAAOE,aAClDN,EAAQO,UA9GS,UA+GjB9D,EAAM+D,SAAQ,mCAAEC,EAAF,KAAKC,EAAL,YAAYV,EAAQW,SAASF,EAAGC,EAAG,EAAG,MACpDV,EAAQO,UA/GS,UAgHjBP,EAAQW,SAAShE,EAAM,GAAIA,EAAM,GAAI,EAAG,GACxCqD,EAAQO,UA/GU,UAgHlBP,EAAQW,SAAS5D,EAAO,GAAIA,EAAO,GAAI,EAAG,GAC1CiD,EAAQO,UAlHW,UAmHnBP,EAAQW,SAAS9D,EAAQ,GAAIA,EAAQ,GAAI,EAAG,KAC3C,CAACJ,EAAOE,EAAOY,EAASR,EAAOF,IAGhC,yBAAK+D,KAAK,SAASC,SAAS,IAAIC,UAAW,SAAAC,GAAC,OA9G5B,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAChBA,GAAW,IAAMA,GAAW,IAAM5D,EAAOvB,EAAWmF,IA6GJC,CAAUF,IAAIG,UAAU,WACtE,yBAAKA,UAAU,QAAf,cACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,eAAf,SACA,yBAAKA,UAAU,eAAejE,IAEhC,yBAAKiE,UAAU,iBACb,yBAAKA,UAAU,iBAAf,SACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,QAAO,0BAAMA,UAAU,cAAmB,oEACzD,yBAAKA,UAAU,QAAO,0BAAMA,UAAU,eAAtC,gCACA,yBAAKA,UAAU,QAAO,0BAAMA,UAAU,YAAtC,kCACA,yBAAKA,UAAU,QAAf,kFAGJ,yBAAKA,UAAU,YAAYC,QAvCf,WAChBzE,EAASf,GACTiB,EAAShB,GACTwB,EAAO,CAAC,GAAI,IACZE,ED3HU,KC4HVE,GAAY,KAkCR,eAGF,4BACE0D,UAAU,SACVE,MAAO,CAAEC,OAAQ,mBACjBC,IAAKhF,EACLiF,MAAK,UAAK7F,EAAY,GAAjB,MACL8F,OAAM,UAAK9F,EAAY,GAAjB,QAEP6B,GAAY,yBAAK2D,UAAU,aAAf,iBE3KnBO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.83d86b9f.chunk.js","sourcesContent":["const CANVAS_SIZE = [800, 800];\r\nconst SNAKE_START = [\r\n  [8, 7],\r\n  [8, 8]\r\n];\r\nconst APPLE_START = [8, 3];\r\nconst SCALE = 40;\r\nconst SPEED = 100;\r\nconst DIRECTIONS = {\r\n  38: [0, -1], // up\r\n  40: [0, 1], // down\r\n  37: [-1, 0], // left\r\n  39: [1, 0] // right\r\n};\r\n\r\nconst HIT_OBJECT = {\r\n  LEFT: 0,\r\n  TOP: 1,\r\n  RIGHT: 2,\r\n  BOTTOM:3,\r\n  SELF_HIT: 4,\r\n  POISON:5,\r\n  BOOSTER:6\r\n}\r\n\r\nconst POISON_START = [12,7];\r\nconst BOOSTER_START = [1,12];\r\nconst SCORE = 0;\r\nexport {\r\n  CANVAS_SIZE,\r\n  SNAKE_START,\r\n  APPLE_START,\r\n  SCALE,\r\n  SPEED,\r\n  DIRECTIONS,\r\n  HIT_OBJECT,\r\n  BOOSTER_START,\r\n  POISON_START,\r\n  SCORE\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useInterval } from \"./useInterval\";\r\nimport {\r\n  CANVAS_SIZE,\r\n  SNAKE_START,\r\n  APPLE_START,\r\n  SCALE,\r\n  SPEED,\r\n  DIRECTIONS,\r\n  HIT_OBJECT,\r\n  BOOSTER_START,\r\n  POISON_START,\r\n  SCORE\r\n} from \"./constants\";\r\n\r\nimport './App.css';\r\nconst App = () => {\r\n  const canvasRef = useRef();\r\n  const [snake, setSnake] = useState(SNAKE_START);\r\n  const [apple, setApple] = useState(APPLE_START);\r\n  const [booster, setBooster] = useState(BOOSTER_START);\r\n  const [poison, setPoison] = useState(POISON_START);\r\n  const [score, setScore] = useState(SCORE);\r\n  const [dir, setDir] = useState([0, -1]);\r\n  const [speed, setSpeed] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  // Defining colors as they are dynamically created inside canvas using JS.\r\n  const snakeColor = '#5D5D5A';\r\n  const appleColor = '#F85959';\r\n  const boosterColor = '#30E3CA';\r\n  const poisonColor = '#FEB062';\r\n  useInterval(() => gameLoop(), speed);\r\n\r\n  const endGame = () => {\r\n    setSpeed(null);\r\n    setGameOver(true);\r\n  };\r\n\r\n  const moveSnake = ({ keyCode }) =>\r\n    keyCode >= 37 && keyCode <= 40 && setDir(DIRECTIONS[keyCode]);\r\n\r\n  const createApple = () =>\r\n    apple.map((_a, i) => Math.floor(Math.random() * (CANVAS_SIZE[i] / SCALE)));\r\n  \r\n  const createBooster = () =>\r\n    booster.map((_a, i) => Math.floor(Math.random() * (CANVAS_SIZE[i] / SCALE)));\r\n  \r\n  const createPoison = () =>\r\n    poison.map((_a, i) => Math.floor(Math.random() * (CANVAS_SIZE[i] / SCALE)));\r\n\r\n  const checkCollision = (piece, snk = snake) => {\r\n    // I know there is a lot of else if hell here. I'll change it. Bear with me for now please.\r\n    // Also need to check that posion, booster and apple don't come in the same position.\r\n    if (piece[0] * SCALE >= CANVAS_SIZE[0]) return HIT_OBJECT.RIGHT;\r\n    else if (piece[0] < 0) return HIT_OBJECT.LEFT;\r\n    else if (piece[1] * SCALE >= CANVAS_SIZE[1]) return HIT_OBJECT.BOTTOM;\r\n    else if (piece[1] < 0) return HIT_OBJECT.TOP;\r\n    else if (piece[0] === poison[0] && piece[1] === poison[1]) return HIT_OBJECT.POISON;\r\n    else if (piece[0] === booster[0] && piece[1] === booster[1]) return HIT_OBJECT.BOOSTER;\r\n\r\n\r\n    for (const segment of snk) {\r\n      if (piece[0] === segment[0] && piece[1] === segment[1]) return HIT_OBJECT.SELF_HIT;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const checkAppleCollision = newSnake => {\r\n    if (newSnake[0][0] === apple[0] && newSnake[0][1] === apple[1]) {\r\n      let newApple = createApple();\r\n      // update score + 1\r\n      setScore(prevScore=>prevScore+1);\r\n      while (checkCollision(newApple, newSnake)) {\r\n        \r\n        newApple = createApple();\r\n      }\r\n      setApple(newApple);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const boostScore = () => {\r\n    setScore(prevScore=>prevScore+4);\r\n    let newBooster = createBooster();\r\n    setBooster(newBooster);\r\n  }\r\n \r\n  \r\n\r\n  \r\n  const gameLoop = () => {\r\n    \r\n    let atePoison = false;\r\n    let isBoosted = false;\r\n    const snakeCopy = JSON.parse(JSON.stringify(snake));\r\n    \r\n    if (snakeCopy.length === 1) endGame();\r\n    const newSnakeHead = [snakeCopy[0][0] + dir[0], snakeCopy[0][1] + dir[1]];\r\n    snakeCopy.unshift(newSnakeHead);\r\n    switch (checkCollision(newSnakeHead)) {\r\n      case HIT_OBJECT.RIGHT: snakeCopy[0][0] = 0; break;\r\n      case HIT_OBJECT.LEFT: snakeCopy[0][0] = CANVAS_SIZE[0] / SCALE; break;\r\n      case HIT_OBJECT.TOP: snakeCopy[0][1] = CANVAS_SIZE[1] / SCALE; break;\r\n      case HIT_OBJECT.BOTTOM: snakeCopy[0][1] = 0; break;\r\n      case HIT_OBJECT.SELF_HIT: endGame();break;\r\n      case HIT_OBJECT.POISON: atePoison=true;break;\r\n      case HIT_OBJECT.BOOSTER: boostScore();isBoosted = true;break;\r\n      default: break;\r\n    }\r\n\r\n    if (atePoison) {\r\n      snakeCopy.pop();\r\n      let newPoison = createPoison();\r\n      setPoison(newPoison);\r\n    }\r\n\r\n    if (isBoosted){\r\n      snakeCopy.unshift(newSnakeHead);\r\n    }\r\n\r\n    if (!checkAppleCollision(snakeCopy)) snakeCopy.pop();\r\n    setSnake(snakeCopy);\r\n  };\r\n\r\n  const startGame = () => {\r\n    setSnake(SNAKE_START);\r\n    setApple(APPLE_START);\r\n    setDir([0, -1]);\r\n    setSpeed(SPEED);\r\n    setGameOver(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const context = canvasRef.current.getContext(\"2d\");\r\n    context.setTransform(SCALE, 0, 0, SCALE, 0, 0);\r\n    context.clearRect(0, 0, window.innerWidth, window.innerHeight);\r\n    context.fillStyle = snakeColor;\r\n    snake.forEach(([x, y]) => context.fillRect(x, y, 1, 1));\r\n    context.fillStyle = appleColor;\r\n    context.fillRect(apple[0], apple[1], 1, 1);\r\n    context.fillStyle = poisonColor;\r\n    context.fillRect(poison[0], poison[1], 1, 1);\r\n    context.fillStyle = boosterColor;\r\n    context.fillRect(booster[0], booster[1], 1, 1);\r\n  }, [snake, apple, gameOver,poison,booster]);\r\n\r\n  return (\r\n    <div role=\"button\" tabIndex=\"0\" onKeyDown={e => moveSnake(e)} className=\"wrapper\">\r\n      <div className=\"logo\">SNAKE GAME</div>\r\n      <div className=\"landing-text\">\r\n        <div className=\"score-section\">\r\n          <div className=\"score-label\">SCORE</div>\r\n          <div className=\"score-value\">{score}</div>\r\n        </div>\r\n        <div className=\"rules-section\">\r\n          <div className=\"rules-heading\">RULES</div>\r\n          <div className=\"rules\">\r\n            <div className=\"rule\"><span className=\"dot green\"></span><span>Booster gives additional 4 points</span></div>\r\n            <div className=\"rule\"><span className=\"dot orange\"></span>Eating Poison reduces length</div>\r\n            <div className=\"rule\"><span className=\"dot red\"></span>Eating Apple gives you 1 point</div>\r\n            <div className=\"rule\">Game ends when length is less than 2 / snake hits itself / try to go reverse</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"start-btn\" onClick={startGame} >START GAME</div>\r\n\r\n      </div>\r\n      <canvas\r\n        className=\"canvas\"\r\n        style={{ border: \"1px solid black\" }}\r\n        ref={canvasRef}\r\n        width={`${CANVAS_SIZE[0]}px`}\r\n        height={`${CANVAS_SIZE[1]}px`}\r\n      />\r\n      {gameOver && <div className=\"game-over\">GAME OVER!</div>}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// Custom Hook by Dan Abramov\r\nimport { useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}